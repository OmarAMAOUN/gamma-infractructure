apiVersion: v1
kind: Secret
metadata:
  name: keycloak
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: keycloak
    {{- if .Values.keycloak.commonLabels }}
    {{- include "common.tplValues.keycloak.render" ( dict "value" .Values.keycloak.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.keycloak.commonAnnotations }}
  annotations: {{- include "common.tplValues.keycloak.render" ( dict "value" .Values.keycloak.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if .Values.keycloak.auth.adminPassword }}
  admin-password: {{ .Values.keycloak.auth.adminPassword | b64enc | quote }}
  {{- else }}
  admin-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- if .Values.keycloak.auth.managementPassword }}
  management-password: {{ .Values.keycloak.auth.managementPassword | b64enc | quote }}
  {{- else }}
  management-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- if and (not .Values.keycloak.postgresql.enabled) (not .Values.keycloak.externalDatabase.existingSecret) }}
  postgresql-password: {{ .Values.keycloak.externalDatabase.password | b64enc | quote }}
  {{- end }}
  {{- if .Values.keycloak.auth.tls.enabled }}
  {{- if or .Values.keycloak.auth.tls.keystorePassword .Values.keycloak.auth.tls.autoGenerated }}
  tls-keystore-password: {{ (.Values.keycloak.auth.tls.keystorePassword | default (randAlphaNum 10)) | b64enc | quote }}
  {{- end }}
  {{- if or .Values.keycloak.auth.tls.truststorePassword .Values.keycloak.auth.tls.autoGenerated }}
  tls-truestore-password: {{ (.Values.keycloak.auth.tls.truststorePassword | default (randAlphaNum 10)) | b64enc | quote }}
  {{- end }}
  {{- end }}