env: preprod
transaction:
  fullnameOverride: "transaction-mariadb-galera"
  image:
    registry: docker.io
    repository: bitnami/mariadb-galera
    tag: 10.5.12-debian-10-r1
  ## @param podManagementPolicy StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ##
  podManagementPolicy: OrderedReady

  mariadbConfiguration: |-
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mariadb/plugin
    [mysqld]
    default_storage_engine=InnoDB
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    tmpdir=/opt/bitnami/mariadb/tmp
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
    bind_address=0.0.0.0
    ## Character set
    ##
    collation_server=utf8_unicode_ci
    init_connect='SET NAMES utf8'
    character_set_server=utf8
    ## MyISAM
    ##
    key_buffer_size=32M
    myisam_recover_options=FORCE,BACKUP
    ## Safety
    ##
    skip_host_cache
    skip_name_resolve
    max_allowed_packet=2G
    max_connect_errors=1000000
    sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
    sysdate_is_now=1
    ## Binary Logging
    ##
    log_bin=mysql-bin
    expire_logs_days=3
    # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
    sync_binlog=0
    # Required for Galera
    binlog_format=row
    ## Caches and Limits
    ##
    tmp_table_size=128M
    max_heap_table_size=128M
    # Re-enabling as now works with Maria 10.1.2
    query_cache_type=1
    query_cache_limit=4M
    query_cache_size=256M
    max_connections=500
    thread_cache_size=50
    open_files_limit=65535
    table_definition_cache=4096
    table_open_cache=4096
    ## InnoDB
    ##
    innodb_data_file_path=ibdata1:12M:autoextend
    innodb=FORCE
    innodb_strict_mode=1
    # Mandatory per https://github.com/codership/documentation/issues/25
    innodb_autoinc_lock_mode=2
    # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
    innodb_doublewrite=1
    innodb_flush_method=O_DIRECT
    innodb_log_files_in_group=2
    innodb_log_file_size=1G
    innodb_flush_log_at_trx_commit=1
    innodb_file_per_table=1
    # 80% Memory is default reco.
    # Need to re-evaluate when DB size grows
    innodb_buffer_pool_size=5G
    innodb_file_format=Barracuda
    ## Logging
    ##
    log_error=/opt/bitnami/mariadb/logs/error/mysqld.error
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    log_queries_not_using_indexes=0
    slow_query_log=1
    long_query_time=2
    ## SSL
    ## Use extraVolumes and extraVolumeMounts to mount /certs filesystem
    # ssl_ca=/certs/ca.pem
    # ssl_cert=/certs/server-cert.pem
    # ssl_key=/certs/server-key.pem
    [galera]
    wsrep_on=ON
    wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
    wsrep_sst_method=xtrabackup-v2
    wsrep_slave_threads=4
    wsrep_cluster_address=gcomm://
    wsrep_cluster_name=galera
    wsrep_sst_auth="root:"
    # Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit
    innodb_flush_log_at_trx_commit=2
    # MYISAM REPLICATION SUPPORT #
    wsrep_replicate_myisam=ON
    [mariadb]
    plugin_load_add=auth_pam
    ## Data-at-Rest Encryption
    ## Use extraVolumes and extraVolumeMounts to mount /encryption filesystem
    # plugin_load_add=file_key_management
    # file_key_management_filename=/encryption/keyfile.enc
    # file_key_management_filekey=FILE:/encryption/keyfile.key
    # file_key_management_encryption_algorithm=AES_CTR
    # encrypt_binlog=ON
    # encrypt_tmp_files=ON
    ## InnoDB/XtraDB Encryption
    # innodb_encrypt_tables=ON
    # innodb_encrypt_temporary_tables=ON
    # innodb_encrypt_log=ON
    # innodb_encryption_threads=4
    # innodb_encryption_rotate_key_age=1
    ## Aria Encryption
    # aria_encrypt_tables=ON
    # encrypt_tmp_disk_tables=ON

  extraVolumes:
  - name: mariadb-error-logs
    persistentVolumeClaim:
      claimName: pvc-mariadb-logs
  
  extraVolumeMounts:
  - name: mariadb-error-logs
    mountPath: /opt/bitnami/mariadb/logs/error

  extraEnvVars:
    - name: TZ
      value: "Africa/Casablanca"

  rootUser:
    user: root
    password: admin123

  db:
    user: testuser
    password: testuser@123
    name: transaction

  galera:
    name: galera
    bootstrap:
      bootstrapFromNode: ""
      forceSafeToBootstrap: false
 
  replicaCount: 3

  persistence:
    enabled: true
    mountPath: /bitnami/mariadb
    storageClass: "karbon-dr"
    accessModes:
      - ReadWriteOnce
    size: 50Gi

  tolerations:
  - key: "reserved"
    operator: "Equal"
    value: "mariadb"
    effect: "NoSchedule"
    
  resources:
    limits:
       cpu: 11000m
       memory: 10Gi
    requests:
       cpu: 10000m
       memory: 10Gi
       
  livenessProbe:
    enabled: true
    ## Initializing the database could take some time
    ##
    initialDelaySeconds: 600
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  startupProbe:
    enabled: false
    ## Initializing the database could take some time
    ##
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    ## Let's wait 600 seconds by default, it should give enough time in any cluster for mysql to init
    ##
    failureThreshold: 48

  podDisruptionBudget:
    create: true
    minAvailable: 2

  service:
    type: NodePort
    port: 3306
    headless:
      publishNotReadyAddresses: false



others:
  fullnameOverride: "deploy-db-concentrateur-mariadb-galera"
  image:
    registry: docker.io
    repository: bitnami/mariadb-galera
    tag: 10.5.12-debian-10-r1
  podManagementPolicy: OrderedReady
  extraEnvVars:
    - name: TZ
      value: "Africa/Casablanca"
  rootUser:
    user: root
    password: admin123

  db:
    user: testuser
    password: testuser@123
    name: offre

  galera:
    name: galera
    bootstrap:
      bootstrapFromNode: ""
      forceSafeToBootstrap: false

  persistence:
    enabled: true
    mountPath: /bitnami/mariadb
    storageClass: "karbon-dr"
    accessModes:
      - ReadWriteOnce
    size: 50Gi

  resources:
    limits:
       cpu: 1000m
       memory: 2Gi
    requests:
       cpu: 1000m
       memory: 2Gi

  livenessProbe:
    enabled: true
    ## Initializing the database could take some time
    ##
    initialDelaySeconds: 600
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  startupProbe:
    enabled: false
    ## Initializing the database could take some time
    ##
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    ## Let's wait 600 seconds by default, it should give enough time in any cluster for mysql to init
    ##
    failureThreshold: 48

  podDisruptionBudget:
    create: true
    minAvailable: 2

  service:
    type: NodePort
    port: 3306
    headless:
      publishNotReadyAddresses: false